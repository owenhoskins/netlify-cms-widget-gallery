{"version":3,"sources":["../../src/utils.js"],"names":["round","value","decimals","Number","Math","ratio","width","height","balancer","rows","columns","overflow","grid","map","sourceRow","rowIndex","row","length","concat","pop","columnPointsArray","column","points","reduce","a","b","spliceAtIndex","extra","counter","findIndex","val","removed","splice","forEach","item","push","overflowRow","acc","cell","idx","floor","computeSizes","photos","margin","balanced","ratios","sameValues","NaN","lastRowIndex","rowsWithSizes","totalRatio","result","photo","rowWidth","fullRowWidth","fullRowRatio","getSizes","obj","max","url","name","aspectRatio","toJS","get","maxWidth","fluidSizes","images","src","srcSet","image","join","base64","sizes","transformUrl"],"mappings":"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","sourcesContent":["export function round(value, decimals) {\n  if (!decimals) decimals = 0;\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\n// return two decimal places rounded number\nexport function ratio({ width, height }) {\n  return round(width / height, 2);\n}\n\n\nfunction balancer(rows, columns) {\n\n  const overflow = []\n\n  let grid = rows.map((sourceRow, rowIndex) => {\n\n    //console.log(`Row ${rowIndex} ===============================`)\n\n    let row\n    if (overflow && overflow.length > 0) {\n      row = overflow.concat(sourceRow)\n      while(overflow.length > 0) { overflow.pop() }\n    } else {\n      row = sourceRow\n    }\n\n    const columnPointsArray = row.map(column => {\n      return column.width > 1 ? 2 : 1\n    })\n\n    const points = columnPointsArray.reduce((a, b) => a + b, 0)\n    //console.log(`Length: ${row.length}, Points: ${columnPointsArray}, Total: ${points}`)\n\n    if (points > (columns + 1)) {\n\n      let spliceAtIndex\n      let extra\n\n      if (row.length > columns) {\n\n        let counter = 0\n        spliceAtIndex = columnPointsArray.findIndex(val => {\n          counter = counter + val\n          return counter >= columns\n        }) + 1\n\n        extra = row.length - spliceAtIndex\n\n        //console.log('!!! spliceAtIndex: ', spliceAtIndex)\n        //console.log(`!!! extra ${extra}`)\n\n      } else {\n        extra = 1\n        spliceAtIndex = row.length - 1\n      }\n\n      //console.log(`${points} is more then ${columns} by ${extra}. Cut at index ${spliceAtIndex}`)\n\n      const removed = row.splice(spliceAtIndex, extra)\n\n      removed.length > 0 && removed.forEach(item => overflow.push(item) )\n\n      //console.log('remainingRow: ', row)\n      //console.log('and overflow: ', overflow)\n    }\n\n    return row\n\n  })\n\n\n\n  // we somehow need to repeat the process with these ones\n  if (overflow) {\n\n    const overflowRow = overflow.reduce((acc, cell, idx) => {\n      const row = Math.floor(idx / columns);\n      acc[row] = acc[row] ? [...acc[row], cell] : [cell]; // eslint-disable-line no-param-reassign\n      return acc;\n    }, []);\n\n    if (overflowRow.length > 0) {\n      //console.log('STILL MORE TO GO!', overflowRow)\n      grid = grid.concat(balancer(overflowRow, columns))\n    }\n  }\n\n  return grid\n\n}\n\n\n// takes the Gallery's photos prop object, width of the container,\n// margin between photos Gallery prop, and columns Gallery prop.\n// calculates, sizes based on columns and returns the photos object with new height/width props\nexport function computeSizes({ photos, columns, width, margin, balanced, ratios }) {\n  if (!ratios) {\n    return []\n  }\n  if (!width || !ratios.length > 0) {\n    return [];\n  }\n  // divide photos over rows, max cells based on `columns`\n  // effectively resulting in [[0, 1, 2], [3, 4, 5], [6, 7]]\n  let rows = photos.reduce((acc, cell, idx) => {\n    const row = Math.floor(idx / columns);\n    acc[row] = acc[row] ? [...acc[row], cell] : [cell]; // eslint-disable-line no-param-reassign\n    return acc;\n  }, []);\n\n\n  const sameValues = !!ratios.reduce(function(a, b){ return (a === b) ? a : NaN; });\n\n  if (balanced && !sameValues) {\n    rows = balancer(rows, columns)\n  }\n\n\n  //console.log('balancedRows: ', rows)\n\n  // calculate total ratio of each row, and adjust each cell height and width\n  // accordingly.\n  const lastRowIndex = rows.length - 1;\n  const rowsWithSizes = rows.map((row, rowIndex) => {\n    const totalRatio = row.reduce((result, photo) => result + ratio(photo), 0); // adds the ratios of each photo to a total ratio\n    let rowWidth = width - row.length * (margin * 2); // minus the margins\n\n    let height\n    if (sameValues) {\n      if (rowIndex !== lastRowIndex) {\n        height = rowWidth / totalRatio\n      } else {\n        const fullRowWidth = width - columns * (margin * 2)\n        const fullRowRatio = ratio(row[0]) * columns\n        height = fullRowWidth / fullRowRatio\n      }\n\n    } else if (balanced) {\n\n      if (rowIndex !== lastRowIndex) {\n        height = rowWidth / totalRatio\n      } else {\n        const columnPointsArray = row.map(column => column.width > 1 ? 2 : 1)\n        const points = columnPointsArray.reduce((a, b) => a + b, 0)\n        rowWidth = width - columns * (margin * 2); // pretend we have 5 columns\n        height = rowWidth / (columns) / (totalRatio / points) // magic forumla\n      }\n\n\n    } else {\n      height = (rowIndex !== lastRowIndex || row.length > 1) // eslint-disable-line\n        ? rowWidth / totalRatio\n        : rowWidth / columns / totalRatio;\n    }\n\n    // row.length was columns, that would give you exactly the original ratio if there were X more images of the same ratio. Here we say there are\n\n    // if not the last row or the row is longer then 1.\n    // let's try setting that two 2, using display inline-block\n    // and setting the text align to center.\n\n    return row.map(photo => {\n      if (rowIndex === lastRowIndex) {\n        //console.log('LAST: height / width', round(height, 1), round(height * ratio(photo), 1))\n      }\n      return ({\n        ...photo,\n        height: round(height, 1),\n        width: round(height * ratio(photo), 1),\n      })\n    });\n  });\n  //debugger;\n  ////console.log('rowsWithSizes: ', rowsWithSizes)\n  return rowsWithSizes.reduce((acc, row) => [...acc, ...row], []);\n}\n\nexport const getSizes = (obj, max) => {\n  if (obj) {\n    let url\n    let name\n    let aspectRatio\n    if (typeof obj.toJS === 'function') {\n      url = obj.get('url')\n      name = obj.get('name')\n      aspectRatio = obj.get('aspectRatio')\n    } else {\n      url = obj.url\n      name = obj.name\n      aspectRatio = obj.aspectRatio\n    }\n\n    const maxWidth = max || 1600\n\n    const fluidSizes = []\n    fluidSizes.push(maxWidth / 3)\n    fluidSizes.push(maxWidth / 2)\n    fluidSizes.push(maxWidth)\n    fluidSizes.push(maxWidth * 1.5)\n\n    const images = fluidSizes.map(width => {\n      return {\n        src: `${url}-/stretch/off/-/resize/${width}x/${name}`,\n        width\n      }\n    })\n\n    const srcSet = images\n      .map(image => `${image.src} ${Math.round(image.width)}w`)\n      .join(`,\\n`)\n\n    return {\n      aspectRatio: aspectRatio,\n      base64: `${url}-/stretch/off/-/resize/100x/${name}`, // psuedo base64\n      sizes: `(max-width: ${maxWidth}px) 100vw, ${maxWidth}px`,\n      src: `${url}-/stretch/off/-/resize/x800/${name}`, // fallbackSrc\n      srcSet\n    }\n  }\n\n  return {}\n}\n\n\nexport const transformUrl = (obj, width = 300) => {\n  let url\n  let name\n  if (typeof obj.toJS === 'function') {\n    url = obj.get('url')\n    name = obj.get('name')\n  } else {\n    url = obj.url\n    name = obj.name\n  }\n  return `${url}-/resize/x${width}/${name}`\n}\n"],"file":"utils.js"}