{"version":3,"sources":["../../../src/components/GalleryPreview.js"],"names":["renderImage","props","photo","width","height","originalSizes","margin","onClick","display","ImagePreviewContent","value","getAsset","photos","ratios","Array","isArray","List","isList","forEach","val","sizes","aspectRatio","src","srcSet","srcSetArray","split","push","GalleryPreview","propTypes","PropTypes","func","isRequired","node"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;AAEA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAAA,uBAKzBA,KALyB,CAE3BC,KAF2B;AAAA,QAElBC,KAFkB,gBAElBA,KAFkB;AAAA,QAEXC,MAFW,gBAEXA,MAFW;AAAA,QAEHC,aAFG,gBAEHA,aAFG;AAAA,QAG3BC,MAH2B,GAKzBL,KALyB,CAG3BK,MAH2B;AAAA,QAI3BC,OAJ2B,GAKzBN,KALyB,CAI3BM,OAJ2B;AAM7B,SACE;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,KADK;AAELC,MAAAA,MAFK;AAGLI,MAAAA,OAAO,EAAE,cAHJ;AAILF,MAAAA,MAJK,CAKL;;AALK;AADT,KASE,6BAAC,cAAD;AAAK,IAAA,KAAK,EAAED;AAAZ,IATF,CADF;AAaD,CAnBD;;AAqBA,MAAMI,mBAAmB,GAAGR,KAAK,IAAI;AAAA,QAC3BS,KAD2B,GACPT,KADO,CAC3BS,KAD2B;AAAA,QACpBC,QADoB,GACPV,KADO,CACpBU,QADoB;AAEnC,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcL,KAAd,KAAwBM,gBAAKC,MAAL,CAAYP,KAAZ,CAA5B,EAAgD;AAC9CA,IAAAA,KAAK,CAACQ,OAAN,CAAcC,GAAG,IAAI;AACnB,YAAMC,KAAK,GAAG,qBAASD,GAAT,EAAc,GAAd,CAAd;;AACA,UAAIC,KAAK,IAAIA,KAAK,CAACC,WAAnB,EAAgC;AAAA,cACtBA,WADsB,GACOD,KADP,CACtBC,WADsB;AAAA,cACTC,GADS,GACOF,KADP,CACTE,GADS;AAAA,cACJC,MADI,GACOH,KADP,CACJG,MADI;AAE9B,cAAMC,WAAW,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,CAApB;AACAb,QAAAA,MAAM,CAACc,IAAP,CAAY;AACVvB,UAAAA,KAAK,EAAEkB,WADG;AAEVjB,UAAAA,MAAM,EAAE,CAFE;AAGVkB,UAAAA,GAHU;AAIVC,UAAAA,MAAM,EAAEC,WAJE;AAKVJ,UAAAA,KAAK,EAAE,CAACA,KAAK,CAACA,KAAP,CALG;AAMVf,UAAAA,aAAa,EAAEe;AANL,SAAZ;AAQAP,QAAAA,MAAM,CAACa,IAAP,CAAYL,WAAZ;AACD;AACF,KAfD;AAgBD;;AAED,SAAO,6BAAC,gBAAD;AACL,IAAA,MAAM,EAAE,EADH;AAEL,IAAA,OAAO,EAAE,CAFJ;AAGL,IAAA,MAAM,EAAER,MAHH;AAIL,IAAA,QAAQ,MAJH;AAKL,IAAA,cAAc,EAAEb,WALX;AAML,IAAA,MAAM,EAAEY;AANH,IAAP;AAQD,CAhCD;;AAkCA,MAAMe,cAAc,GAAG1B,KAAK,IAAI;AAC9B,SACE,6BAAC,2CAAD,QACGA,KAAK,CAACS,KAAN,GAAc,6BAAC,mBAAD,EAAyBT,KAAzB,CAAd,GAAmD,IADtD,CADF;AAKD,CAND;;AAQA0B,cAAc,CAACC,SAAf,GAA2B;AACzBjB,EAAAA,QAAQ,EAAEkB,mBAAUC,IAAV,CAAeC,UADA;AAEzBrB,EAAAA,KAAK,EAAEmB,mBAAUG;AAFQ,CAA3B;eAKeL,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'immutable';\n\nimport Gallery from './Gallery';\nimport Img from './Image';\nimport { getSizes } from '../utils';\n\nimport { WidgetPreviewContainer } from 'netlify-cms-ui-default';\n\nconst renderImage = (props) => {\n  const {\n    photo: { width, height, originalSizes },\n    margin,\n    onClick,\n  } = props\n  return (\n    <div\n      style={{\n        width,\n        height,\n        display: 'inline-block',\n        margin,\n        //cursor: 'pointer'\n      }}\n    >\n      <Img sizes={originalSizes} />\n    </div>\n  )\n}\n\nconst ImagePreviewContent = props => {\n  const { value, getAsset } = props;\n  const photos = [];\n  const ratios = [];\n\n  if (Array.isArray(value) || List.isList(value)) {\n    value.forEach(val => {\n      const sizes = getSizes(val, 500)\n      if (sizes && sizes.aspectRatio) {\n        const { aspectRatio, src, srcSet } = sizes\n        const srcSetArray = srcSet.split(',')\n        photos.push({\n          width: aspectRatio,\n          height: 1,\n          src,\n          srcSet: srcSetArray,\n          sizes: [sizes.sizes],\n          originalSizes: sizes,\n        })\n        ratios.push(aspectRatio)\n      }\n    });\n  }\n\n  return <Gallery\n    margin={16}\n    columns={4}\n    ratios={ratios}\n    balanced\n    ImageComponent={renderImage}\n    photos={photos}\n  />\n};\n\nconst GalleryPreview = props => {\n  return (\n    <WidgetPreviewContainer>\n      {props.value ? <ImagePreviewContent {...props} /> : null}\n    </WidgetPreviewContainer>\n  );\n};\n\nGalleryPreview.propTypes = {\n  getAsset: PropTypes.func.isRequired,\n  value: PropTypes.node,\n};\n\nexport default GalleryPreview;\n"],"file":"GalleryPreview.js"}