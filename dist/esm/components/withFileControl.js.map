{"version":3,"sources":["../../../src/components/withFileControl.js"],"names":["MAX_DISPLAY_LENGTH","ImageWrapper","Image","lengths","borderRadius","MultiImageWrapper","FileInfo","FileLink","FileLinkList","FileWidgetButton","buttons","button","components","badge","FileWidgetButtonRemove","badgeDanger","isMultiple","value","Array","isArray","List","isList","warnDeprecatedOptions","field","console","warn","oneLine","get","withFileControl","forImage","FileControl","React","Component","constructor","props","e","onOpenMediaLibrary","preventDefault","mediaLibraryFieldOptions","hasIn","getIn","controlID","privateUpload","allowMultiple","config","window","confirm","onClearMediaControl","onChange","size","length","text","substring","map","val","renderFileLink","getAsset","url","renderImages","renderFileLinks","handleChange","handleRemove","subject","article","shouldComponentUpdate","nextProps","mediaPath","mediaPaths","componentDidUpdate","onRemoveInsertedMedia","componentWillUnmount","onRemoveMediaControl","render","classNameWrapper","renderSelection","renderNoSelection","PropTypes","object","isRequired","func","ImmutablePropTypes","onAddAsset","string","oneOfType","arrayOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { Map, List } from 'immutable';\nimport { once } from 'lodash';\nimport uuid from 'uuid/v4';\nimport { oneLine } from 'common-tags';\nimport { lengths, components, buttons } from 'netlify-cms-ui-default';\n\nimport { transformUrl } from '../utils'\n\nconst MAX_DISPLAY_LENGTH = 50;\n\nconst ImageWrapper = styled.div`\n  flex-basis: 155px;\n  width: 155px;\n  height: 100px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${lengths.borderRadius};\n`;\n\nconst MultiImageWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst FileInfo = styled.div`\n  button:not(:first-child) {\n    margin-top: 12px;\n  }\n`;\n\nconst FileLink = styled.a`\n  margin-bottom: 20px;\n  font-weight: normal;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n\nconst FileLinkList = styled.ul`\n  list-style-type: none;\n`;\n\nconst FileWidgetButton = styled.button`\n  ${buttons.button};\n  ${components.badge};\n`;\n\nconst FileWidgetButtonRemove = styled.button`\n  ${buttons.button};\n  ${components.badgeDanger};\n`;\n\nfunction isMultiple(value) {\n  return Array.isArray(value) || List.isList(value);\n}\n\nconst warnDeprecatedOptions = once(field =>\n  console.warn(oneLine`\n  Netlify CMS config: ${field.get('name')} field: property \"options\" has been deprecated for the\n  ${field.get('widget')} widget and will be removed in the next major release. Rather than\n  \\`field.options.media_library\\`, apply media library options for this widget under\n  \\`field.media_library\\`.\n`),\n);\n\nexport default function withFileControl({ forImage } = {}) {\n  return class FileControl extends React.Component {\n    static propTypes = {\n      field: PropTypes.object.isRequired,\n      getAsset: PropTypes.func.isRequired,\n      mediaPaths: ImmutablePropTypes.map.isRequired,\n      onAddAsset: PropTypes.func.isRequired,\n      onChange: PropTypes.func.isRequired,\n      onRemoveInsertedMedia: PropTypes.func.isRequired,\n      onOpenMediaLibrary: PropTypes.func.isRequired,\n      onClearMediaControl: PropTypes.func.isRequired,\n      onRemoveMediaControl: PropTypes.func.isRequired,\n      classNameWrapper: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    };\n\n    static defaultProps = {\n      value: '',\n    };\n\n    constructor(props) {\n      super(props);\n      this.controlID = uuid();\n    }\n\n    shouldComponentUpdate(nextProps) {\n      /**\n       * Always update if the value changes.\n       */\n      if (this.props.value !== nextProps.value) {\n        return true;\n      }\n\n      /**\n       * If there is a media path for this control in the state object, and that\n       * path is different than the value in `nextProps`, update.\n       */\n      const mediaPath = nextProps.mediaPaths.get(this.controlID);\n      if (mediaPath && nextProps.value !== mediaPath) {\n        return true;\n      }\n\n      return false;\n    }\n\n    componentDidUpdate() {\n      const { mediaPaths, value, onRemoveInsertedMedia, onChange } = this.props;\n      const mediaPath = mediaPaths.get(this.controlID);\n      if (mediaPath && mediaPath !== value) {\n        onChange(mediaPath);\n      } else if (mediaPath && mediaPath === value) {\n        onRemoveInsertedMedia(this.controlID);\n      }\n    }\n\n    componentWillUnmount() {\n      this.props.onRemoveMediaControl(this.controlID);\n    }\n\n    handleChange = e => {\n      const { field, onOpenMediaLibrary, value } = this.props;\n      e.preventDefault();\n      let mediaLibraryFieldOptions;\n\n      /**\n       * `options` hash as a general field property is deprecated, only used\n       * when external media libraries were first introduced. Not to be\n       * confused with `options` for the select widget, which serves a different\n       * purpose.\n       */\n      if (field.hasIn(['options', 'media_library'])) {\n        warnDeprecatedOptions(field);\n        mediaLibraryFieldOptions = field.getIn(['options', 'media_library'], Map());\n      } else {\n        mediaLibraryFieldOptions = field.get('media_library', Map());\n      }\n\n      return onOpenMediaLibrary({\n        controlID: this.controlID,\n        forImage,\n        privateUpload: field.get('private'),\n        value,\n        allowMultiple: true,\n        config: mediaLibraryFieldOptions.get('config'),\n      });\n    };\n\n    handleRemove = e => {\n      e.preventDefault();\n      if (window.confirm('Are you sure you wish to clear this field?')) {\n        this.props.onClearMediaControl(this.controlID);\n        return this.props.onChange('');\n      }\n    };\n\n    renderFileLink = value => {\n      const size = MAX_DISPLAY_LENGTH;\n      if (!value || value.length <= size) {\n        return value;\n      }\n      const text = `${value.substring(0, size / 2)}\\u2026${value.substring(\n        value.length - size / 2 + 1,\n        value.length,\n      )}`;\n      return (\n        <FileLink href={value} rel=\"noopener\" target=\"_blank\">\n          {text}\n        </FileLink>\n      );\n    };\n\n    renderFileLinks = () => {\n      const { value } = this.props;\n\n      if (isMultiple(value)) {\n        return (\n          <FileLinkList>\n            {value.map(val => (\n              <li key={val}>{this.renderFileLink(val)}</li>\n            ))}\n          </FileLinkList>\n        );\n      }\n      return this.renderFileLink(value);\n    };\n\n    renderImages = () => {\n      const { getAsset, value } = this.props;\n      if (isMultiple(value)) {\n        return (\n          <MultiImageWrapper>\n            {value.map(val => {\n              const url = transformUrl(val)\n              return (\n              <ImageWrapper key={url}>\n                <Image src={url} />\n              </ImageWrapper>\n            )\n            }\n              )}\n          </MultiImageWrapper>\n        );\n      }\n      const url = transformUrl(val)\n      return (\n        <ImageWrapper>\n          <Image src={url} />\n        </ImageWrapper>\n      );\n    };\n\n    renderSelection = () => (\n      <div>\n        {forImage ? this.renderImages() : null}\n        <FileInfo>\n          {forImage ? null : this.renderFileLinks()}\n          <FileWidgetButton onClick={this.handleChange}>\n            Edit selection\n          </FileWidgetButton>\n          <FileWidgetButtonRemove onClick={this.handleRemove}>\n            Clear selection\n          </FileWidgetButtonRemove>\n        </FileInfo>\n      </div>\n    );\n\n    renderNoSelection = (subject, article) => (\n      <FileWidgetButton onClick={this.handleChange}>\n        Select images\n      </FileWidgetButton>\n    );\n\n    render() {\n      const { value, classNameWrapper } = this.props;\n\n      return (\n        <div className={classNameWrapper}>\n          <span>\n            {value ? this.renderSelection() : this.renderNoSelection()}\n          </span>\n        </div>\n      );\n    }\n  };\n}\n"],"file":"withFileControl.js"}