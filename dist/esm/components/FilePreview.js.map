{"version":3,"sources":["../../../src/components/FilePreview.js"],"names":["FileLink","value","getAsset","FileLinkList","values","map","FileContent","Array","isArray","List","isList","FilePreview","props","propTypes","PropTypes","func","isRequired","node"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,MAAMA,QAAQ,GAAG;AAAA;AAAA,wBAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,QAAV;AAAA,SACtB;AAAG,IAAA,IAAI,EAAEA,QAAQ,CAACD,KAAD,CAAjB;AAA0B,IAAA,GAAG,EAAC,qBAA9B;AAAoD,IAAA,MAAM,EAAC;AAA3D,KACGA,KADH,CADsB;AAAA,CAAP;AAAA;AAAA;AAAA,EAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAd;;AAQA,SAASE,YAAT,QAA4C;AAAA,MAApBC,MAAoB,SAApBA,MAAoB;AAAA,MAAZF,QAAY,SAAZA,QAAY;AAC1C,SACE,0CACGE,MAAM,CAACC,GAAP,CAAWJ,KAAK,IACf,6BAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,KAAK,EAAEA,KAA7B;AAAoC,IAAA,QAAQ,EAAEC;AAA9C,IADD,CADH,CADF;AAOD;;AAED,SAASI,WAAT,QAA0C;AAAA,MAAnBL,KAAmB,SAAnBA,KAAmB;AAAA,MAAZC,QAAY,SAAZA,QAAY;;AACxC,MAAIK,KAAK,CAACC,OAAN,CAAcP,KAAd,KAAwBQ,gBAAKC,MAAL,CAAYT,KAAZ,CAA5B,EAAgD;AAC9C,WAAO,6BAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,KAAtB;AAA6B,MAAA,QAAQ,EAAEC;AAAvC,MAAP;AACD;;AACD,SAAO,6BAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAwB,IAAA,QAAQ,EAAEC;AAAlC,IAAP;AACD;;AAED,MAAMS,WAAW,GAAGC,KAAK,IACvB,6BAAC,2CAAD,QAAyBA,KAAK,CAACX,KAAN,GAAc,6BAAC,WAAD,EAAiBW,KAAjB,CAAd,GAA2C,IAApE,CADF;;AAIAD,WAAW,CAACE,SAAZ,GAAwB;AACtBX,EAAAA,QAAQ,EAAEY,mBAAUC,IAAV,CAAeC,UADH;AAEtBf,EAAAA,KAAK,EAAEa,mBAAUG;AAFK,CAAxB;eAKeN,W","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { List } from 'immutable';\nimport { WidgetPreviewContainer } from 'netlify-cms-ui-default';\n\nconst FileLink = styled(({ value, getAsset }) => (\n  <a href={getAsset(value)} rel=\"noopener noreferrer\" target=\"_blank\">\n    {value}\n  </a>\n))`\n  display: block;\n`;\n\nfunction FileLinkList({ values, getAsset }) {\n  return (\n    <div>\n      {values.map(value => (\n        <FileLink key={value} value={value} getAsset={getAsset} />\n      ))}\n    </div>\n  );\n}\n\nfunction FileContent({ value, getAsset }) {\n  if (Array.isArray(value) || List.isList(value)) {\n    return <FileLinkList values={value} getAsset={getAsset} />;\n  }\n  return <FileLink value={value} getAsset={getAsset} />;\n}\n\nconst FilePreview = props => (\n  <WidgetPreviewContainer>{props.value ? <FileContent {...props} /> : null}</WidgetPreviewContainer>\n);\n\nFilePreview.propTypes = {\n  getAsset: PropTypes.func.isRequired,\n  value: PropTypes.node,\n};\n\nexport default FilePreview;\n"],"file":"FilePreview.js"}