{"version":3,"sources":["../../../src/components/Gallery.js"],"names":["photoPropType","PropTypes","shape","src","string","isRequired","width","number","height","alt","title","srcSet","array","sizes","Gallery","React","Component","constructor","state","containerWidth","handleResize","bind","handleClick","componentDidMount","setState","Math","floor","_gallery","clientWidth","window","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","e","event","index","props","photos","onClick","imageIndex","photo","previous","next","render","ImageComponent","columns","margin","balanced","ratios","thumbs","c","map","key","content","display","clear","propTypes","arrayOf","func","defaultProps"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {jsx} from '@emotion/core'\n\nimport { computeSizes } from '../utils';\n\nconst photoPropType = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  srcSet: PropTypes.array,\n  sizes: PropTypes.array,\n})\n\nclass Gallery extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      containerWidth: 0,\n    };\n    this.handleResize = this.handleResize.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ containerWidth: Math.floor(this._gallery.clientWidth) });\n    window.addEventListener('resize', this.handleResize);\n  }\n  componentDidUpdate() {\n    if (this._gallery.clientWidth !== this.state.containerWidth) {\n      this.setState({ containerWidth: Math.floor(this._gallery.clientWidth) });\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize, false);\n  }\n  handleResize(e) {\n    this.setState({ containerWidth: Math.floor(this._gallery.clientWidth) });\n  }\n  handleClick(event, { index }) {\n    const { photos, onClick } = this.props;\n    //console.log('Gallery handleClick: ', photos[index].imageIndex,)\n    onClick(event, {\n      index: photos[index].imageIndex, // use the saved index when we built the array\n      //index,\n      photo: photos[index],\n      previous: photos[index - 1] || null,\n      next: photos[index + 1] || null,\n    });\n  }\n\n  render() {\n    const { ImageComponent } = this.props;\n    // subtract 1 pixel because the browser may round up a pixel\n    const width = this.state.containerWidth - 1;\n    const { photos, columns, margin, onClick, balanced, ratios } = this.props;\n    const thumbs = computeSizes({ width, columns, margin, photos, balanced, ratios });\n    return (\n      <div\n        className=\"react-photo-gallery--gallery\"\n        css={{\n          textAlign: 'center',\n          //fontSize: 0\n        }}\n      >\n        <div ref={c => (this._gallery = c)}>\n          {thumbs.map((photo, index) => {\n            const { width, height } = photo;\n            return (\n              <ImageComponent\n                key={photo.key || photo.src}\n                margin={margin}\n                index={index}\n                photo={photo}\n                onClick={onClick ? this.handleClick : null}\n              />\n            );\n          })}\n        </div>\n        <div style={{ content: '', display: 'table', clear: 'both' }} />\n      </div>\n    );\n  }\n}\n\nGallery.propTypes = {\n  photos: PropTypes.arrayOf(photoPropType).isRequired,\n  onClick: PropTypes.func,\n  columns: PropTypes.number,\n  margin: PropTypes.number,\n  ImageComponent: PropTypes.func,\n};\n\nGallery.defaultProps = {\n  columns: 3,\n  margin: 2,\n};\n\nexport default Gallery;\n"],"file":"Gallery.js"}